name: Create and Publish Docker Image

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      tag:
        required: true
        type: string
      port:
        required: true
        type: string
    secrets:
        AWS_ACCESS_KEY_ID:
            required: true
        AWS_SECRET_ACCESS_KEY:
            required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{matrix.java}}
      uses: actions/setup-java@v2
      with:
        java-version: ${{matrix.java}}
        distribution: 'adopt'
        cache: maven

    # build the application's microservices and run tests 
    - name: Build with Maven
      run: |
        cd  ${{inputs.image_name}}
        mvn -B package --file pom.xml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIA5537F44VFKMLQPB2
        aws-secret-access-key: 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'
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR - api-gateway 
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: devops_petclinic_1
        IMAGE_TAG: ${{inputs.image_name}}
      run: |
        aws ecr-public get-login-password --region eu-west-3 | docker login --username AWS --password-stdin public.ecr.aws/h7a4i4a9/devops_petclinic_1
        docker tag service-api-gateway:latest public.ecr.aws/h7a4i4a9/devops_petclinic_1:$IMAGE_TAG
        docker push public.ecr.aws/h7a4i4a9/devops_petclinic_1:$IMAGE_TAG